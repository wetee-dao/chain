
//! Autogenerated weights for wetee_guild

// Executed Command:
// ./target/debug/wetee-node
// benchmark
// pallet
// --chain
// dev
// --pallet
// wetee-guild
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// packages/pallets/wetee-guild/src/weights.rs
// --template
// ./hacks/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for wetee_guild.
pub trait WeightInfo {
	fn guild_join() -> Weight;
	fn create_guild() -> Weight;
}

/// Weights for wetee_guild using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `WeteeOrg::Guilds` (r:1 w:0)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn guild_join() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `338`
		//  Estimated: `3803`
		// Minimum execution time: 421_268_000 picoseconds.
		Weight::from_parts(424_278_000, 3803)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Guilds` (r:1 w:1)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_guild() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `335`
		//  Estimated: `3800`
		// Minimum execution time: 464_753_000 picoseconds.
		Weight::from_parts(469_099_000, 3800)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `WeteeOrg::Guilds` (r:1 w:0)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn guild_join() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `338`
		//  Estimated: `3803`
		// Minimum execution time: 421_268_000 picoseconds.
		Weight::from_parts(424_278_000, 3803)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Guilds` (r:1 w:1)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_guild() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `335`
		//  Estimated: `3800`
		// Minimum execution time: 464_753_000 picoseconds.
		Weight::from_parts(469_099_000, 3800)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}