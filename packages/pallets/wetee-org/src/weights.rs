
//! Autogenerated weights for wetee_org

// Executed Command:
// ./target/debug/wetee-node
// benchmark
// pallet
// --chain
// dev
// --pallet
// wetee-org
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// packages/pallets/wetee-org/src/weights.rs
// --template
// ./hacks/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for wetee_org.
pub trait WeightInfo {
	fn create_dao() -> Weight;
	fn update_dao() -> Weight;
	fn create_roadmap_task() -> Weight;
	fn update_roadmap_task() -> Weight;
	fn create_app() -> Weight;
	fn update_app_status() -> Weight;
	fn org_integrate_app() -> Weight;
	fn update_org_app_status() -> Weight;
}

/// Weights for wetee_org using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `WeteeOrg::NextDaoId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextDaoId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Members` (r:1 w:1)
	/// Proof: `WeteeOrg::Members` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Guilds` (r:1 w:1)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Daos` (r:0 w:1)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeSudo::Account` (r:0 w:1)
	/// Proof: `WeteeSudo::Account` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_dao() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `3471`
		// Minimum execution time: 637_922_000 picoseconds.
		Weight::from_parts(676_390_000, 3471)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:1)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_dao() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `3737`
		// Minimum execution time: 390_634_000 picoseconds.
		Weight::from_parts(392_297_000, 3737)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::NextTaskId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextTaskId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::RoadMaps` (r:1 w:1)
	/// Proof: `WeteeOrg::RoadMaps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_roadmap_task() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `297`
		//  Estimated: `3762`
		// Minimum execution time: 469_404_000 picoseconds.
		Weight::from_parts(471_247_000, 3762)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::RoadMaps` (r:1 w:1)
	/// Proof: `WeteeOrg::RoadMaps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_roadmap_task() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `424`
		//  Estimated: `3889`
		// Minimum execution time: 460_403_000 picoseconds.
		Weight::from_parts(471_705_000, 3889)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::NextAppId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextAppId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:0 w:1)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_app() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `308`
		//  Estimated: `3773`
		// Minimum execution time: 386_811_000 picoseconds.
		Weight::from_parts(388_553_000, 3773)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:1 w:1)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_app_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `374`
		//  Estimated: `3839`
		// Minimum execution time: 417_194_000 picoseconds.
		Weight::from_parts(418_064_000, 3839)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:1 w:0)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::OrgApps` (r:1 w:1)
	/// Proof: `WeteeOrg::OrgApps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn org_integrate_app() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `374`
		//  Estimated: `3839`
		// Minimum execution time: 470_500_000 picoseconds.
		Weight::from_parts(472_180_000, 3839)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::OrgApps` (r:1 w:1)
	/// Proof: `WeteeOrg::OrgApps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_org_app_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `394`
		//  Estimated: `3859`
		// Minimum execution time: 415_862_000 picoseconds.
		Weight::from_parts(418_048_000, 3859)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `WeteeOrg::NextDaoId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextDaoId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Members` (r:1 w:1)
	/// Proof: `WeteeOrg::Members` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Guilds` (r:1 w:1)
	/// Proof: `WeteeOrg::Guilds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::GuildMembers` (r:1 w:1)
	/// Proof: `WeteeOrg::GuildMembers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::Daos` (r:0 w:1)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeSudo::Account` (r:0 w:1)
	/// Proof: `WeteeSudo::Account` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_dao() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `3471`
		// Minimum execution time: 637_922_000 picoseconds.
		Weight::from_parts(676_390_000, 3471)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:1)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_dao() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `3737`
		// Minimum execution time: 390_634_000 picoseconds.
		Weight::from_parts(392_297_000, 3737)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::NextTaskId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextTaskId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::RoadMaps` (r:1 w:1)
	/// Proof: `WeteeOrg::RoadMaps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_roadmap_task() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `297`
		//  Estimated: `3762`
		// Minimum execution time: 469_404_000 picoseconds.
		Weight::from_parts(471_247_000, 3762)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::RoadMaps` (r:1 w:1)
	/// Proof: `WeteeOrg::RoadMaps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_roadmap_task() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `424`
		//  Estimated: `3889`
		// Minimum execution time: 460_403_000 picoseconds.
		Weight::from_parts(471_705_000, 3889)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::NextAppId` (r:1 w:1)
	/// Proof: `WeteeOrg::NextAppId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:0 w:1)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_app() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `308`
		//  Estimated: `3773`
		// Minimum execution time: 386_811_000 picoseconds.
		Weight::from_parts(388_553_000, 3773)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:1 w:1)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_app_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `374`
		//  Estimated: `3839`
		// Minimum execution time: 417_194_000 picoseconds.
		Weight::from_parts(418_064_000, 3839)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::AppHubs` (r:1 w:0)
	/// Proof: `WeteeOrg::AppHubs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::OrgApps` (r:1 w:1)
	/// Proof: `WeteeOrg::OrgApps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn org_integrate_app() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `374`
		//  Estimated: `3839`
		// Minimum execution time: 470_500_000 picoseconds.
		Weight::from_parts(472_180_000, 3839)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `WeteeOrg::Daos` (r:1 w:0)
	/// Proof: `WeteeOrg::Daos` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `WeteeOrg::OrgApps` (r:1 w:1)
	/// Proof: `WeteeOrg::OrgApps` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_org_app_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `394`
		//  Estimated: `3859`
		// Minimum execution time: 415_862_000 picoseconds.
		Weight::from_parts(418_048_000, 3859)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}